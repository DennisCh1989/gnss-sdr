
        
/* this file was generated by volk_gnsssdr template utils, do not edit! */
        
/* Copyright (C) 2010-2018 (see AUTHORS file for a list of contributors)
 *
 * This file is part of GNSS-SDR.
 *
 * GNSS-SDR is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GNSS-SDR is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNSS-SDR. If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef INCLUDED_VOLK_GNSSSDR_TYPEDEFS
#define INCLUDED_VOLK_GNSSSDR_TYPEDEFS

#include <inttypes.h>
#include <volk_gnsssdr/volk_gnsssdr_complex.h>

// clang-format off
typedef void (*p_16i_resamplerxnpuppet_16i)(int16_t* , const int16_t* , unsigned int );
typedef void (*p_16i_xn_resampler_16i_xn)(int16_t** , const int16_t* , float , float , float* , unsigned int , int , unsigned int );
typedef void (*p_16ic_16i_rotator_dot_prod_16ic_xn)(lv_16sc_t* , const lv_16sc_t* , const lv_32fc_t , lv_32fc_t* , const int16_t** , int , unsigned int );
typedef void (*p_16ic_16i_rotator_dotprodxnpuppet_16ic)(lv_16sc_t* , const lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_conjugate_16ic)(lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_convert_32fc)(lv_32fc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_resampler_fast_16ic)(lv_16sc_t* , const lv_16sc_t* , float , float , int , unsigned int );
typedef void (*p_16ic_resamplerfastpuppet_16ic)(lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_resamplerfastxnpuppet_16ic)(lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_resamplerxnpuppet_16ic)(lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_rotatorpuppet_16ic)(lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_s32fc_x2_rotator_16ic)(lv_16sc_t* , const lv_16sc_t* , const lv_32fc_t , lv_32fc_t* , unsigned int );
typedef void (*p_16ic_x2_dot_prod_16ic)(lv_16sc_t* , const lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_x2_dot_prod_16ic_xn)(lv_16sc_t* , const lv_16sc_t* , const lv_16sc_t** , int , unsigned int );
typedef void (*p_16ic_x2_dotprodxnpuppet_16ic)(lv_16sc_t* , const lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_x2_multiply_16ic)(lv_16sc_t* , const lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_x2_rotator_dot_prod_16ic_xn)(lv_16sc_t* , const lv_16sc_t* , const lv_32fc_t , lv_32fc_t* , const lv_16sc_t** , int , unsigned int );
typedef void (*p_16ic_x2_rotator_dotprodxnpuppet_16ic)(lv_16sc_t* , const lv_16sc_t* , const lv_16sc_t* , unsigned int );
typedef void (*p_16ic_xn_resampler_16ic_xn)(lv_16sc_t** , const lv_16sc_t* , float , float , float* , unsigned int , int , unsigned int );
typedef void (*p_16ic_xn_resampler_fast_16ic_xn)(lv_16sc_t** , const lv_16sc_t* , float* , float , unsigned int , int , unsigned int );
typedef void (*p_32f_index_max_32u)(uint32_t* , const float* , uint32_t );
typedef void (*p_32f_resamplerxnpuppet_32f)(float* , const float* , unsigned int );
typedef void (*p_32f_sincos_32fc)(lv_32fc_t* , const float* , unsigned int );
typedef void (*p_32f_xn_resampler_32f_xn)(float** , const float* , float , float , float* , unsigned int , int , unsigned int );
typedef void (*p_32fc_32f_rotator_dot_prod_32fc_xn)(lv_32fc_t* , const lv_32fc_t* , const lv_32fc_t , lv_32fc_t* , const float** , int , unsigned int );
typedef void (*p_32fc_32f_rotator_dotprodxnpuppet_32fc)(lv_32fc_t* , const lv_32fc_t* , const float* , unsigned int );
typedef void (*p_32fc_convert_16ic)(lv_16sc_t* , const lv_32fc_t* , unsigned int );
typedef void (*p_32fc_convert_8ic)(lv_8sc_t* , const lv_32fc_t* , unsigned int );
typedef void (*p_32fc_resamplerxnpuppet_32fc)(lv_32fc_t* , const lv_32fc_t* , unsigned int );
typedef void (*p_32fc_x2_rotator_dot_prod_32fc_xn)(lv_32fc_t* , const lv_32fc_t* , const lv_32fc_t , lv_32fc_t* , const lv_32fc_t** , int , unsigned int );
typedef void (*p_32fc_x2_rotator_dotprodxnpuppet_32fc)(lv_32fc_t* , const lv_32fc_t* , const lv_32fc_t* , unsigned int );
typedef void (*p_32fc_xn_resampler_32fc_xn)(lv_32fc_t** , const lv_32fc_t* , float , float , float* , unsigned int , int , unsigned int );
typedef void (*p_64f_accumulator_64f)(double* , const double* , unsigned int );
typedef void (*p_8i_accumulator_s8i)(char* , const char* , unsigned int );
typedef void (*p_8i_index_max_16u)(unsigned int* , const char* , unsigned int );
typedef void (*p_8i_max_s8i)(char* , const char* , unsigned int );
typedef void (*p_8i_x2_add_8i)(char* , const char* , const char* , unsigned int );
typedef void (*p_8ic_conjugate_8ic)(lv_8sc_t* , const lv_8sc_t* , unsigned int );
typedef void (*p_8ic_magnitude_squared_8i)(char* , const lv_8sc_t* , unsigned int );
typedef void (*p_8ic_s8ic_multiply_8ic)(lv_8sc_t* , const lv_8sc_t* , const lv_8sc_t , unsigned int );
typedef void (*p_8ic_x2_dot_prod_8ic)(lv_8sc_t* , const lv_8sc_t* , const lv_8sc_t* , unsigned int );
typedef void (*p_8ic_x2_multiply_8ic)(lv_8sc_t* , const lv_8sc_t* , const lv_8sc_t* , unsigned int );
typedef void (*p_8u_x2_multiply_8u)(unsigned char* , const unsigned char* , const unsigned char* , unsigned int );
typedef void (*p_s32f_sincos_32fc)(lv_32fc_t *, const float , float *, unsigned int );
typedef void (*p_s32f_sincospuppet_32fc)(lv_32fc_t* , const float , unsigned int );
// clang-format on

#endif /*INCLUDED_VOLK_GNSSSDR_TYPEDEFS*/
